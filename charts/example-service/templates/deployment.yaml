apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "example-service.fullname" . }}
  labels:
{{ include "labels.standard" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.deploymentStrategy }}
  strategy:
{{ toYaml .Values.deploymentStrategy | indent 4 }}
  {{- end }}
  selector:
    matchLabels:
{{ include "labels.match" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "labels.standard" . | indent 8 }}
    spec:
{{- include "example-service.imagePullSecrets" . | indent 6 }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "example-service.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
          {{- range $name, $value := .Values.env.open }}
          {{- if not (empty $value) }}
          - name: {{ $name | quote }}
            value: {{ $value | quote }}
            {{- end }}
            {{- end }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort}}
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | indent 8 }}
      {{- end }}
  revisionHistoryLimit: 10
  minReadySeconds: 0
