plugins {
    id "java"
    id "idea"
    id "jacoco"
    id "checkstyle"

    id "org.springframework.boot" version "2.5.6"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"

    id "com.avast.gradle.docker-compose" version "0.14.9"
    id "org.flywaydb.flyway" version "8.0.2"
    id "com.diffplug.spotless" version "5.17.0"
}

group = "top.flyeric"
version = "1.0.0-SNAPSHOT"

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    maven {
        url "https://maven.aliyun.com/repository/central"
    }
    maven {
        credentials {
            username "${ALIYUN_MAVEN_USER}"
            password "${ALIYUN_MAVEN_PASSWORD}"
        }
        url "https://packages.aliyun.com/maven/repository/2006205-release-klNaKw/"
    }
    maven {
        credentials {
            username "${ALIYUN_MAVEN_USER}"
            password "${ALIYUN_MAVEN_PASSWORD}"
        }
        url "https://packages.aliyun.com/maven/repository/2006205-snapshot-niWcQo/"
    }
}

ext {
    baseLibVersion = "1.0.25-SNAPSHOT"
    lombokVersion = "1.18.22"
    mapstructVersion = "1.4.2.Final"
    queryDslVersion = "4.4.0"
    archunitVersion = "0.21.0"
    restAssuredVersion = "4.4.0"
}

apply from: "${rootProject.projectDir}/gradle/integration-test.gradle"
apply from: "${rootProject.projectDir}/gradle/jacoco.gradle"
apply from: "${rootProject.projectDir}/gradle/checkstyle.gradle"
apply from: "${rootProject.projectDir}/gradle/spotless.gradle"
apply from: "${rootProject.projectDir}/gradle/docker-compose.gradle"

dependencies {
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    compileOnly("org.mapstruct:mapstruct-processor:${mapstructVersion}")
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

    compileOnly("com.querydsl:querydsl-apt:${queryDslVersion}")
    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa",
            "javax.persistence:javax.persistence-api:2.2",
            "javax.annotation:javax.annotation-api:1.3.2"
    )

    implementation("top.flyeric:base-lib:${baseLibVersion}")

    // springboot frameworks
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.data:spring-data-commons")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.boot:spring-boot-starter-cache")

    // mysql frameworks
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}")
    implementation("org.flywaydb:flyway-core")
    runtimeOnly("mysql:mysql-connector-java")

    // test frameworks
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("junit:junit:4.13.2")

    testImplementation("com.tngtech.archunit:archunit:${archunitVersion}")
    testImplementation("com.tngtech.archunit:archunit-junit5:${archunitVersion}")
    testImplementation("io.rest-assured:spring-mock-mvc:${restAssuredVersion}")
    testImplementation("com.github.springtestdbunit:spring-test-dbunit:1.3.0")
    testImplementation("org.dbunit:dbunit:2.7.2")
    testImplementation("org.jyaml:jyaml:1.3")
}

test {
    useJUnitPlatform()
}